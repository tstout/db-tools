
//
// TODO - change this to support gradle wrapper.
//

repositories {
    mavenCentral()
    mavenLocal()
}

project.ext {
    libraries = [
            runtime_core: [
                    //'com.google.inject:guice:4.0-beta',
                    'com.google.guava:guava:14.0.1'
            ],
            test_core: [
                    'org.mockito:mockito-core:1.9.0',
                    'junit:junit:4.11',
                    'com.carrotsearch:junit-benchmarks:0.7.2'
            ]
    ]
}

def hasGem(gemName) {
    new File("${rootDir}/gems").list().find { it.startsWith(gemName) } != null
}

subprojects {
    repositories {
        mavenCentral()
    }

    configurations {
        jruby
    }

    dependencies {
        jruby 'org.jruby:jruby-complete:1.7.8'
    }

    project.ext {
        jrubyCommon = {
            main = 'org.jruby.Main'
            classpath = sourceSets.test.runtimeClasspath + configurations.jruby
            environment['GEM_HOME'] = file("${rootDir}")
            environment['GEM_PATH'] = file("${rootDir}")
            //
            // Tell JRuby where to find rb files to satisfy require
            // See about cleaning up this path statement (maybe an [].each ?)
            //
            environment['RUBYOPT'] = "-I${file('lib/ruby').path}:${file('build/generated-src/ruby')}"
        }
    }

    task gems {
        description = 'install gems needed for jruby'
        ['rspec', 'minitest', 'minitest-reporters'].each { gem ->
            if (!hasGem(gem)) {
                javaexec {
                    main = 'org.jruby.Main'
                    classpath = configurations.jruby
                    args = ['-S', 'gem', 'install', gem]
                    environment['GEM_PATH'] = file("${rootDir}")
                    environment['GEM_HOME'] = file("${rootDir}")
                }
            }
        }
    }
}
